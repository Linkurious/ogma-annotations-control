import{_ as s,c as i,o as t,ae as n}from"./chunks/framework.ZXzY5ASU.js";const c=JSON.parse('{"title":"@linkurious/ogma-annotations","description":"","frontmatter":{},"headers":[],"relativePath":"api/README.md","filePath":"api/README.md"}'),e={name:"api/README.md"};function l(o,a,r,h,p,k){return t(),i("div",null,a[0]||(a[0]=[n(`<h1 id="linkurious-ogma-annotations" tabindex="-1"><code>@linkurious/ogma-annotations</code> <a class="header-anchor" href="#linkurious-ogma-annotations" aria-label="Permalink to &quot;\`@linkurious/ogma-annotations\`&quot;">​</a></h1><p>This package provides a set of utilities to help you annotate your Ogma graph. It&#39;s a plugin for the <a href="https://ogma.linkurio.us" target="_blank" rel="noreferrer">Ogma</a> graph visualization library.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @linkurious/ogma</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @linkurious/ogma-annotations</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>The plugin comes with no UI of its own, but provides a set of tools that you can enable in your Ogma instance. Currently, it supports the following features:</p><ul><li><strong>Text boxes</strong>: You can create text boxes on top of your visualisation. They can be moved around and resized. Styling is encoded in the feature&#39;s data.</li><li><strong>Arrows</strong>: Arrows can be drawn between nodes. They can be styled and can snap to both nodes and text annotations.</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Ogma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@linkurious/ogma&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Control,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  createArrow,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  createText,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  AnnotationCollection,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@linkurious/ogma-annotations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CSS required to style the controls and handles</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@linkurious/ogma-annotations/style.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ogma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ogma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> annotationsEditor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ogma);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// we assume you have a button with the id &#39;add-text&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addTexts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add-text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLButtonElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// user has clicked on the button to add text annotations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addTexts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // disable the button to prevent multiple text annotations from being created</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addTexts.disabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // create a new text annotation when user starts dragging the pointer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ogma.events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">once</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mousedown&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">evt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // annotations are in graph coordinates</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ogma.view.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screenToGraphCoordinates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(evt);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // create a text annotation feature</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // start drawing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    annotationsEditor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, text);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // finish drawing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    annotationsEditor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">once</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dragend&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (annotation.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text.id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      addTexts.disabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// also stop drawing but pressing the escape key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keydown&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">evt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (evt.key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Escape&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) annotationsEditor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancelDrawing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="control" tabindex="-1"><code>Control</code> <a class="header-anchor" href="#control" aria-label="Permalink to &quot;\`Control\`&quot;">​</a></h3><p>The <code>Control</code> class is the main entry point for the plugin. It provides a set of methods to create and manage annotations.</p><h4 id="new-control-ogma-ogma" tabindex="-1"><code>new Control(ogma: Ogma)</code> <a class="header-anchor" href="#new-control-ogma-ogma" aria-label="Permalink to &quot;\`new Control(ogma: Ogma)\`&quot;">​</a></h4><p>Creates a new control instance.</p><h4 id="add-annotation-annotationcollection-text-arrow" tabindex="-1"><code>.add(annotation: AnnotationCollection | Text | Arrow)</code> <a class="header-anchor" href="#add-annotation-annotationcollection-text-arrow" aria-label="Permalink to &quot;\`.add(annotation: AnnotationCollection | Text | Arrow)\`&quot;">​</a></h4><p>Adds an annotation to the graph.</p><h4 id="remove-annotation-annotationcollection-text-arrow" tabindex="-1"><code>.remove(annotation: AnnotationCollection | Text | Arrow)</code> <a class="header-anchor" href="#remove-annotation-annotationcollection-text-arrow" aria-label="Permalink to &quot;\`.remove(annotation: AnnotationCollection | Text | Arrow)\`&quot;">​</a></h4><p>Removes an annotation from the graph.</p><h4 id="starttext-x-number-y-number-text-text" tabindex="-1"><code>.startText(x: number, y: number, text: Text)</code> <a class="header-anchor" href="#starttext-x-number-y-number-text-text" aria-label="Permalink to &quot;\`.startText(x: number, y: number, text: Text)\`&quot;">​</a></h4><p>Starts drawing a text annotation at the given coordinates.</p><h4 id="startarrow-x-number-y-number-arrow-arrow" tabindex="-1"><code>.startArrow(x: number, y: number, arrow: Arrow)</code> <a class="header-anchor" href="#startarrow-x-number-y-number-arrow-arrow" aria-label="Permalink to &quot;\`.startArrow(x: number, y: number, arrow: Arrow)\`&quot;">​</a></h4><p>Starts drawing an arrow annotation at the given coordinates.</p><h4 id="canceldrawing" tabindex="-1"><code>.cancelDrawing()</code> <a class="header-anchor" href="#canceldrawing" aria-label="Permalink to &quot;\`.cancelDrawing()\`&quot;">​</a></h4><p>Cancels the current drawing operation.</p><h4 id="on-event-dragend-dragstart-drag-click-listener-annotation-annotationcollection-void" tabindex="-1"><code>.on(event: &#39;dragend&#39; | &#39;dragstart&#39; | &#39;drag&#39; | &#39;click&#39;, listener: (annotation: AnnotationCollection) =&gt; void)</code> <a class="header-anchor" href="#on-event-dragend-dragstart-drag-click-listener-annotation-annotationcollection-void" aria-label="Permalink to &quot;\`.on(event: &#39;dragend&#39; | &#39;dragstart&#39; | &#39;drag&#39; | &#39;click&#39;, listener: (annotation: AnnotationCollection) =&gt; void)\`&quot;">​</a></h4><p>Registers an event listener.</p><h4 id="once-event-dragend-dragstart-drag-click-listener-annotation-annotationcollection-void" tabindex="-1"><code>.once(event: &#39;dragend&#39; | &#39;dragstart&#39; | &#39;drag&#39; | &#39;click&#39;, listener: (annotation: AnnotationCollection) =&gt; void)</code> <a class="header-anchor" href="#once-event-dragend-dragstart-drag-click-listener-annotation-annotationcollection-void" aria-label="Permalink to &quot;\`.once(event: &#39;dragend&#39; | &#39;dragstart&#39; | &#39;drag&#39; | &#39;click&#39;, listener: (annotation: AnnotationCollection) =&gt; void)\`&quot;">​</a></h4><p>Registers a one-time event listener.</p><h2 id="createtext-x-0-y-0-width-100-height-50-content-styles-textstyles-text" tabindex="-1"><code>createText(x[=0], y[=0], width[=100], height[=50], content = &#39;&#39;, styles?: TextStyles): Text</code> <a class="header-anchor" href="#createtext-x-0-y-0-width-100-height-50-content-styles-textstyles-text" aria-label="Permalink to &quot;\`createText(x[=0], y[=0], width[=100], height[=50], content = &#39;&#39;, styles?: TextStyles): Text\`&quot;">​</a></h2><p>Creates a new text annotation.</p><h2 id="createarrow-x0-number-y0-number-x1-number-y1-number-styles-arrowstyles-arrow" tabindex="-1"><code>createArrow(x0: number, y0: number, x1: number, y1: number, styles?: ArrowStyles): Arrow</code> <a class="header-anchor" href="#createarrow-x0-number-y0-number-x1-number-y1-number-styles-arrowstyles-arrow" aria-label="Permalink to &quot;\`createArrow(x0: number, y0: number, x1: number, y1: number, styles?: ArrowStyles): Arrow\`&quot;">​</a></h2><p>Creates a new arrow annotation.</p><h2 id="annotationcollection" tabindex="-1"><code>AnnotationCollection</code> <a class="header-anchor" href="#annotationcollection" aria-label="Permalink to &quot;\`AnnotationCollection\`&quot;">​</a></h2><p>An annotation collection is a group of annotations that are related to each other. It can be a text annotation or an arrow annotation. It follows GeoJSON&#39;s feature collection format.</p><h2 id="text" tabindex="-1"><code>Text</code> <a class="header-anchor" href="#text" aria-label="Permalink to &quot;\`Text\`&quot;">​</a></h2><p>A text annotation is a feature that represents a text box on the graph. It has the following properties:</p><ul><li><code>id</code>: a unique identifier for the text annotation.</li><li><code>type</code>: the type of the feature, which is always <code>text</code>.</li><li><code>properties</code>: an object that contains the text content and the style of the text. <ul><li><code>properties.content: string</code>: the content of the text.</li><li><code>properties.style: TextStyle</code>: the style of the text.</li></ul></li></ul><h2 id="arrow" tabindex="-1"><code>Arrow</code> <a class="header-anchor" href="#arrow" aria-label="Permalink to &quot;\`Arrow\`&quot;">​</a></h2><p>An arrow annotation is a feature that represents an arrow on the graph. It has the following properties:</p><ul><li><code>id</code>: a unique identifier for the arrow annotation.</li><li><code>type</code>: the type of the feature, which is always <code>arrow</code>.</li><li><code>properties</code>: an object that contains the style of the arrow. <ul><li><code>properties.style: ArrowStyle</code>: the style of the arrow.</li><li><code>properties.links: { [&#39;start&#39;| &#39;end&#39;]: Link }</code>: Encoded connections of the arrow to nodes or text annotations.</li></ul></li></ul><h2 id="textstyle" tabindex="-1"><a href="src/types.ts"><code>TextStyle</code></a> <a class="header-anchor" href="#textstyle" aria-label="Permalink to &quot;[\`TextStyle\`](src/types.ts)&quot;">​</a></h2><h2 id="arrowstyle" tabindex="-1"><a href="src/types.ts"><code>ArrowStyle</code></a> <a class="header-anchor" href="#arrowstyle" aria-label="Permalink to &quot;[\`ArrowStyle\`](src/types.ts)&quot;">​</a></h2><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>Apache-2.0</p>`,43)]))}const E=s(e,[["render",l]]);export{c as __pageData,E as default};
