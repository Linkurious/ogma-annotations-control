import{_ as e,o,c as t,R as a}from"./chunks/framework.mij6cosL.js";const g=JSON.parse('{"title":"Interface: TextStyle","description":"","frontmatter":{},"headers":[],"relativePath":"annotations/interfaces/TextStyle.md","filePath":"annotations/interfaces/TextStyle.md"}'),r={name:"annotations/interfaces/TextStyle.md"},n=a('<h1 id="interface-textstyle" tabindex="-1">Interface: TextStyle <a class="header-anchor" href="#interface-textstyle" aria-label="Permalink to &quot;Interface: TextStyle&quot;">​</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="background" tabindex="-1">background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;background&quot;">​</a></h3><p>• <code>Optional</code> <strong>background</strong>: <code>string</code></p><p>background color: empty for transparent #f00, yellow...</p><h3 id="color" tabindex="-1">color <a class="header-anchor" href="#color" aria-label="Permalink to &quot;color&quot;">​</a></h3><p>• <code>Optional</code> <strong>color</strong>: <code>string</code></p><p>text color: #f00, yellow...</p><h3 id="font" tabindex="-1">font <a class="header-anchor" href="#font" aria-label="Permalink to &quot;font&quot;">​</a></h3><p>• <code>Optional</code> <strong>font</strong>: <code>string</code></p><p>Helvetica, sans-serif...</p><h3 id="fontsize" tabindex="-1">fontSize <a class="header-anchor" href="#fontsize" aria-label="Permalink to &quot;fontSize&quot;">​</a></h3><p>• <code>Optional</code> <strong>fontSize</strong>: <code>string</code></p><p>12px, 1em...</p><h3 id="padding" tabindex="-1">padding <a class="header-anchor" href="#padding" aria-label="Permalink to &quot;padding&quot;">​</a></h3><p>• <code>Optional</code> <strong>padding</strong>: <code>number</code></p><p>padding around the text</p><h3 id="strokecolor" tabindex="-1">strokeColor <a class="header-anchor" href="#strokecolor" aria-label="Permalink to &quot;strokeColor&quot;">​</a></h3><p>• <code>Optional</code> <strong>strokeColor</strong>: <code>string</code></p><h3 id="stroketype" tabindex="-1">strokeType <a class="header-anchor" href="#stroketype" aria-label="Permalink to &quot;strokeType&quot;">​</a></h3><p>• <code>Optional</code> <strong>strokeType</strong>: <code>&quot;none&quot;</code> | <code>&quot;plain&quot;</code> | <code>&quot;dashed&quot;</code></p><h3 id="strokewidth" tabindex="-1">strokeWidth <a class="header-anchor" href="#strokewidth" aria-label="Permalink to &quot;strokeWidth&quot;">​</a></h3><p>• <code>Optional</code> <strong>strokeWidth</strong>: <code>number</code></p>',23),d=[n];function c(i,s,l,p,h,f){return o(),t("div",null,d)}const k=e(r,[["render",c]]);export{g as __pageData,k as default};
